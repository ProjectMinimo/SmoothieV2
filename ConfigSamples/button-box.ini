# Example snippet for button box
# example of setting up the button box module, better for input buttons etc
# note the .enable is optional and defaults to true, if you want to disable one button just set to false
# the release is also optional

[button box]
# useful for testing
#but1.enable = true
#but1.pin = PB1-
#but1.press = echo but1-down
#but1.release = echo but1-up

#but2.enable = true
#but2.pin = PJ4-
#but2.press = echo but2-down
#but2.release = echo but2-up

#but3.enable = true
#but3.pin = PA4-
#but3.press = echo but3-down
#but3.release = echo but3-up

#but4.enable = true
#but4.pin = PG0-
#but4.press = echo but4-down
#but4.release = echo but4-up

but1.enable = true
but1.pin = PB1-
but1.press = $J -c A1
but1.release = $J STOP

but2.enable = true
but2.pin = PJ4-
but2.press = $J -c A-1
but2.release = $J STOP

but3.enable = true
but3.pin = PA4-
but3.press = $J -c Z1 S0.2
but3.release = $J STOP

but4.enable = true
but4.pin = PG0-
but4.press = $J -c Z-1 S0.2
but4.release = $J STOP

# instead of a pin a callback can be set by another module to be called for the pin status
ext1-b2.enable = true
ext1-b2.pin = external
ext1-b2.press = G33 K1

ext1-b1.enable = true
ext1-b1.pin = external
ext1-b1.press = $J STOP

# a matrix style keypad can also be used, it requires 4 input pins and 4
# output pins, the row pins are the outputs. They are scanned for any keys being
# pressed, then mapped to the given map and the relevant *_press or *_release
# is executed. the release is optional
4x4keypad.enable = true
4x4keypad.rows = 4
4x4keypad.cols = 4
4x4keypad.row1pin = PB1!
4x4keypad.row2pin = PJ4!
4x4keypad.row3pin = PA4!
4x4keypad.row4pin = PG0!
4x4keypad.col1pin = PJ3^
4x4keypad.col2pin = PG1^
4x4keypad.col3pin = PJ2^
4x4keypad.col4pin = PH2^
4x4keypad.map = 1234567890ABCD-*   # maps matrix to characters 1-1, 1-2, 1-3, 1-4, 2-1, 2-2, 2-3, 2-4... etc
4x4keypad.1_press = echo key1-down
4x4keypad.1_release = echo key1-up
4x4keypad.2_press = echo key2-down
4x4keypad.2_release = echo key2-up








